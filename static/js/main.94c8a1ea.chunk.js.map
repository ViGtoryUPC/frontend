{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","dimensions","Array","keys","map","j","renderSquare","length","status","renderBoard","React","Component","calculateWinner","lines","a","b","c","TextInput","field_name","form_field_name","Text","type","name","placeholder","defaultValue","UsernameInput","state","valid","err_msg","event","regex_val_err_msg","validations","content","currentTarget","console","log","regex","Object","RegExp","slice","test","validate_content_regex","validation_rgx_msg","setState","Floating","onChange","validate_content_clientside","bind","required","Control","Feedback","htmlFor","PasswordInput","split","MailInput","DegreeInput","Select","ScreenToggleLoginRegister","children","eventKey","switchScreen","useAccordionButton","LoginForm","user","username","password","RegisterForm","mail","InitialScreen","loginTregisterF","getValidationRegexAndErrorMessages","defaultActiveKey","Collapse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94c8a1ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Accordion, Button, Card, InputGroup, Form, FormControl } from 'react-bootstrap';\r\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button className=\"square\" onClick={props.onClick}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\n\t\r\nclass Board extends React.Component {\r\n\r\n\trenderSquare(i) {\r\n\t\treturn (\r\n\t\t\t<Square\r\n\t\t\t\tvalue={this.props.squares[i]}\r\n\t\t\t\tonClick={() => this.props.onClick(i)}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\trenderBoard() {\r\n\t\tconst dimensions = [...Array(3).keys()];\r\n\r\n\t\treturn(\r\n\t\t\tdimensions.map(i => {return(\r\n\r\n\t\t\t\t<div className=\"board-row\">\r\n\r\n\t\t\t\t{dimensions.map(j => {return(\r\n\t\t\t\t\tthis.renderSquare(i*dimensions.length+j)\r\n\t\t\t\t)})}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)})\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"status\">{this.status}</div>\r\n\t\t\t\t{this.renderBoard()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thistory: [{\r\n\t\t\t\tsquares: Array(9).fill(null),\r\n\t\t\t}],\r\n\t\t\tstepNumber: 0,\r\n\t\t\txIsNext: true\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\thandleClick(i){\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([{\r\n\t\t\t\tsquares: squares,\r\n\t\t\t}]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t  stepNumber: step,\r\n\t\t  xIsNext: (step % 2) === 0,\r\n\t\t});\r\n\t  }\r\n\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winner = calculateWinner(current.squares);\r\n\r\n\r\n\r\n\t\tconst moves = history.map((step, move) => {\r\n\t\t\tconst desc = move ?\r\n\t\t\t\t ((move === history.length-1) ? 'Go to current move' : ('Go to move #' + move)) :\r\n\t\t\t\t'Go to game start';\r\n\t\t\treturn (\r\n\t\t\t\t<li key={move}>\r\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\r\n\r\n\t\tlet status;\r\n\t\tif (winner) {\r\n\t\t\tstatus = 'Winner: ' + winner;\r\n\t\t} else {\r\n\t\t\tstatus = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t<Board\r\n\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\tonClick={(i) => this.handleClick(i)}\r\n\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\treturn squares[a];\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction TextInput({field_name, form_field_name}){\r\n//class TextInput extends React.Component {\r\n\t//render(){\r\n\t//return(<div>text{children}</div>);\r\n\t//};\r\n\r\n\treturn(\r\n\r\n\t\t<InputGroup>\r\n\t\t\t<InputGroup.Text>\r\n\t\t\t\t{field_name}\r\n\t\t\t</InputGroup.Text>\r\n\t\t\t<FormControl type=\"text\" name={form_field_name} placeholder=\"usuari\" defaultValue=\"\"></FormControl>\r\n\t\t</InputGroup>\r\n\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction validate_content_regex(event, validations){\r\n\t//Comprobamos errores de formato con Regex\r\n\tlet content = event.currentTarget.value;\r\n\tconsole.log(content);\r\n\r\n\tfor (let i = 0; i < validations.length; i++) {\r\n\t\t//console.log(Object.keys(validations[i])[0]);\r\n\r\n\t\tlet regex = Object.keys(validations[i])[0];\r\n\t\t//console.log(regex.slice(1, -1));\r\n\t\t//console.log( new RegExp(regex.slice(1, -1)).test(content) );\r\n\r\n\t\tif (! ( new RegExp(regex.slice(1, -1)).test(content) ) ){\r\n\t\t\treturn validations[i][regex];\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass UsernameInput extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tvalidate_content_clientside(event){\r\n\r\n\t\t//Comprobamos errores de formato con Regex\r\n\t\tlet regex_val_err_msg = validate_content_regex(event, this.props.validation_rgx_msg);\r\n\t\tif (regex_val_err_msg != false){\r\n\t\t\tthis.setState({\r\n\t\t\t\tvalid: false,\r\n\t\t\t\t//err_msg: validations[i][regex]\r\n\t\t\t\terr_msg: regex_val_err_msg\r\n\t\t\t});\r\n\t\t\tconsole.log(\"err_msg: \" + this.state.err_msg);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Si todo es correcto\r\n\t\tthis.setState({\r\n\t\t\tvalid: true,\r\n\t\t\terr_msg: \"\"\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\t//console.log(this.props.validation_rgx_msg[0]);\r\n\t\t//return(<TextInput field_name=\"Nom d'usuari\" form_field_name=\"username\"/>);\r\n\r\n\t\treturn(\r\n\r\n\t\t\t<Form.Floating className=\"sm mt-2 mb-3\">\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\tname={\"username\"} \r\n\t\t\t\t\tplaceholder=\"Nom d'usuari\" \r\n\t\t\t\t\tdefaultValue=\"\"\r\n\t\t\t\t\tonChange={this.validate_content_clientside.bind(this)}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{this.state.err_msg}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t<label htmlFor=\"floatingInputCustom\">Nom d'usuari</label>\r\n\t\t\t</Form.Floating>\r\n\r\n\t\t);\r\n\t};\r\n}\r\n\r\nclass PasswordInput extends React.Component {\r\n\trender(){\r\n\t\t//Contraseña normal\r\n\t\tif (this.props.form_field_name.split(\"_\").length < 3){\r\n\t\t\tconsole.log(this.props.validation_rgx_msg[0]);\r\n\t\t}\r\n\t\t//Confirmar contraseña\r\n\t\telse {\r\n\r\n\t\t}\r\n\t\treturn(<TextInput field_name=\"Contrasenya\" form_field_name=\"password\"/>);\r\n\t};\r\n}\r\n\r\nclass MailInput extends React.Component {\r\n\trender(){\r\n\t\tconsole.log(this.props.validation_rgx_msg[0]);\r\n\t\treturn(<TextInput field_name=\"Correu electrònic\" form_field_name=\"mail\"/>);\r\n\t};\r\n}\r\n\r\nclass DegreeInput extends React.Component {\r\n\trender(){\r\n\t\treturn(<Form.Select field_name=\"Grau d'estudis\" form_field_name=\"degree\"/>);\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\nfunction ScreenToggleLoginRegister({ children, eventKey }){\r\n\tconst switchScreen = useAccordionButton(eventKey, ()=>{/*console.log(\"Accordion \"+eventKey+\" triggered!\")*/});\r\n\t\r\n\treturn(\r\n\t\t<span \r\n\t\t\tclassName=\"interactiveToggleLoginRegister\"\r\n\t\t\tonClick={switchScreen}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</span>\r\n\t);\r\n}\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\t\r\n\trender(){\r\n\t\t/*let User = new UsernameInput();\r\n\t\tUser.props.form_field_name=\"login_username\";\r\n\t\tUser.props.validation_rgx_msg=this.props.validation_rgx_msg.username;*/\r\n\r\n\t\tlet user = <UsernameInput form_field_name=\"login_username\" validation_rgx_msg={this.props.validation_rgx_msg.username} />;\r\n\t\t//console.log(user.props.form_field_name);\r\n\r\n\t\tlet password = <PasswordInput form_field_name=\"login_password\" validation_rgx_msg={this.props.validation_rgx_msg.password} />;\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Inicia sessió:</h1>\r\n\t\t\t\t{user}\r\n\t\t\t\t{password}\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\tNo tens un compte?&nbsp;\r\n\t\t\t\t\t<ScreenToggleLoginRegister eventKey=\"accord_register\">Crea'n un!</ScreenToggleLoginRegister>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nclass RegisterForm extends React.Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Crea un nou compte:</h1>\r\n\t\t\t\t<UsernameInput form_field_name=\"register_username\" validation_rgx_msg={this.props.validation_rgx_msg.username} />\r\n\t\t\t\t<PasswordInput form_field_name=\"register_password\"  validation_rgx_msg={this.props.validation_rgx_msg.password} />\r\n\t\t\t\t<PasswordInput form_field_name=\"register_password_confirm\" />\r\n\t\t\t\t<MailInput form_field_name=\"register_mail\" validation_rgx_msg={this.props.validation_rgx_msg.mail} />\r\n\t\t\t\t<DegreeInput  form_field_name=\"register_degree\" />\r\n\t\t\t\t<p>\r\n\t\t\t\t\tJa tens un compte?&nbsp;\r\n\t\t\t\t\t<ScreenToggleLoginRegister eventKey=\"accord_login\">Accedeix-hi aquí!</ScreenToggleLoginRegister>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass InitialScreen extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t//loginTregisterF: this.props.loginTregisterF\r\n\t\t\tloginTregisterF: true\r\n\t\t};\r\n\t}\r\n\r\n\tLoginOrRegisterClick() {\r\n\t\tthis.setState({\r\n\t\t\tloginTregisterF: !this.state.loginTregisterF\r\n\t\t})\r\n\t}\r\n\r\n\r\n\r\n\tgetValidationRegexAndErrorMessages(){\r\n\r\n\t\t//Uso de los regex: regex.test(string); //(pero el regex es idetificado por las barras, y no puede ser un string)\r\n\t\t//Para poder usar el string regex a modo de objeto regex, hará falta usar RegExp y slice:\r\n\t\t//(new RegExp(\"/^.+@.+$/\".slice(1, -1)).test(\"hola@gmail.com\"));\r\n\r\n\t\tlet validation_rgx_msg = \r\n\t\t{\r\n\t\t\t\"username\" : [\r\n\t\t\t\t{\"/^.{2,32}$/\" : \"El teu nom d'usuari només pot ocupar 2-32 caràcters.\"},\r\n\t\t\t\t{\"/^[a-zA-Z0-9_\\\\-\\\\.]+$/\" : \"El teu nom d'usuari només pot contenir caràcters [a-z, A-Z, 0-9, _, -, .].\"}\r\n\t\t\t],\r\n\t\t\t\"password\" : [\r\n\t\t\t\t{\"/^.{4,32}$/\" : \"La teva contrasenya només pot ocupar 4-32 caràcters.\"},\r\n\t\t\t\t{\"/^[a-zA-Z0-9_\\\\-\\\\.]+$/\" : \"La teva contrasenya només pot contenir caràcters [a-z, A-Z, 0-9, _, -, .].\"}\r\n\t\t\t],\r\n\t\t\t\"mail\" : [\r\n\t\t\t\t{\"/^.+@.+$/\" : \"És necessària una adreça electrònica vàlida.\\nPer exemple: usuari@domini.xyz\"}\r\n\t\t\t]\r\n\r\n\t\t};\r\n\r\n\t\t//Como lo pasaremos como prop, no hace falta hacer JSON.stringify()\r\n\t\treturn validation_rgx_msg;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t\r\n\trender(){\r\n\t\t\r\n\t\tlet validation_rgx_msg = this.getValidationRegexAndErrorMessages();\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<Accordion defaultActiveKey=\"accord_login\" className=\"content\">\r\n\r\n\t\t\t\t<Accordion.Collapse eventKey=\"accord_login\" >\r\n\t\t\t\t\t<div className=\"content_wrapper\">\r\n\t\t\t\t\t<LoginForm validation_rgx_msg={validation_rgx_msg} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Accordion.Collapse>\r\n\r\n\t\t\t\t<Accordion.Collapse eventKey=\"accord_register\">\r\n\t\t\t\t\t<div className=\"content_wrapper\">\r\n\t\t\t\t\t<RegisterForm validation_rgx_msg={validation_rgx_msg} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Accordion.Collapse>\r\n\r\n\t\t\t</Accordion>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n\t<InitialScreen />,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}